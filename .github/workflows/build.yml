name: build

on:
  push:
    branches: [main]
  pull_request:
    paths:
      - '**/**.rs'
      - '**/Cargo.toml'

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - name: Format
        run: cargo fmt -- --check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v2
      - name: build and lint with clippy
        run: cargo clippy --tests

  integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      # Disable full debug symbol generation to speed up CI build and keep memory down
      # "1" means line tables only, which is useful for panic tracebacks.
      RUSTFLAGS: "-C debuginfo=1"
      # https://github.com/rust-lang/cargo/issues/10280
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"
      RUST_BACKTRACE: "1"

    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true

      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - uses: beyondstorage/setup-hdfs@master
        with:
          hdfs-version: '2.10.2'

      - name: Set Hadoop env
        run: |
          echo "CLASSPATH=$CLASSPATH:`hadoop classpath --glob`" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$JAVA_HOME/lib/server" >> $GITHUB_ENV

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: |
          git submodule update --init --recursive
          cargo test
